/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloodtestapp;

import javax.swing.*;

/**
 *
 * @author pyaku
 */
public class BloodTestGUI extends javax.swing.JFrame {

    /**
     * Creates new form BloodTestGUI
     */
    
     private BloodTestQueueInterface myBloodTest;
     private PQInterface myPQinterface;
     private StackInterface mystackinterface;
     private Scheduler scheduler;
     private JTextArea queueDisplay;
    public BloodTestGUI() {
        myBloodTest = new BloodTestQueue(); //Initilize bloodtestqueue
        scheduler = new Scheduler(); //Initilize the scheduler
        mystackinterface = new NotShownStack(); //Initialize the stack
        queueDisplay = new JTextArea();
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameTF = new javax.swing.JTextField();
        nameLB = new javax.swing.JLabel();
        priorityLB = new javax.swing.JLabel();
        priorityTF = new javax.swing.JTextField();
        ageLB = new javax.swing.JLabel();
        ageTF = new javax.swing.JTextField();
        gpLB = new javax.swing.JLabel();
        gpTF = new javax.swing.JTextField();
        hospitalLB = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        nextPersonBtn = new javax.swing.JButton();
        viewQueueBtn = new javax.swing.JButton();
        notShowUpBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        hospitalCB = new javax.swing.JCheckBox();
        clearBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        messageTA = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameTF.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N

        nameLB.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        nameLB.setText("Name:");

        priorityLB.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        priorityLB.setText("Priority:");
        priorityLB.setToolTipText("");

        priorityTF.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N

        ageLB.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        ageLB.setText("Age:");

        ageTF.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N

        gpLB.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        gpLB.setText("GP Details:");

        gpTF.setFont(new java.awt.Font("Segoe UI Variable", 0, 14)); // NOI18N

        hospitalLB.setFont(new java.awt.Font("Segoe UI Variable", 1, 14)); // NOI18N
        hospitalLB.setText("From Hospital Ward:");

        addBtn.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        nextPersonBtn.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        nextPersonBtn.setText("Next Person");
        nextPersonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPersonBtnActionPerformed(evt);
            }
        });

        viewQueueBtn.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        viewQueueBtn.setText("View Queue");
        viewQueueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewQueueBtnActionPerformed(evt);
            }
        });

        notShowUpBtn.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        notShowUpBtn.setText("Not Shown Up");
        notShowUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notShowUpBtnActionPerformed(evt);
            }
        });

        exitBtn.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Variable", 1, 24)); // NOI18N
        jLabel6.setText("BLOOD TEST SCHEDULER APP");

        hospitalCB.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        hospitalCB.setText("Check if Yes");
        hospitalCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalCBActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        messageTA.setEditable(false);
        messageTA.setColumns(20);
        messageTA.setRows(5);
        jScrollPane2.setViewportView(messageTA);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gpLB, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hospitalLB)
                                    .addComponent(ageLB, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(priorityLB, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameLB, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(priorityTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ageTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(gpTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(hospitalCB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addBtn)
                                .addGap(27, 27, 27)
                                .addComponent(deleteBtn)
                                .addGap(26, 26, 26)
                                .addComponent(clearBtn)))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(nextPersonBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(viewQueueBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(notShowUpBtn)
                                        .addGap(28, 28, 28)
                                        .addComponent(exitBtn))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(gpLB))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLB)
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priorityLB)
                            .addComponent(priorityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLB)
                            .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(gpTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nextPersonBtn)
                            .addComponent(viewQueueBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(hospitalLB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hospitalCB, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(deleteBtn)
                    .addComponent(notShowUpBtn)
                    .addComponent(exitBtn)
                    .addComponent(clearBtn))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hospitalCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalCBActionPerformed

    
  
    
    
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        
        Person newPerson = new Person();
        newPerson.setName(nameTF.getText());
        String priority = priorityTF.getText().toLowerCase();  // Convert input to lowercase for consistency

        // Validate priority input
        if (!priority.equals("urgent") && !priority.equals("medium") && !priority.equals("low")) {
            messageTA.append("Error: Please enter 'urgent', 'medium', or 'low' for priority.");
            return;  // Stop execution if input is invalid
        }

        newPerson.setPriority(priority);
        int age = Integer.parseInt(ageTF.getText());// parsing the age from the textfield
        newPerson.setAge(age); //setting the age in the person object
        
        newPerson.setGpDetails(gpTF.getText());
        boolean fromHospitalWard = hospitalCB.isSelected();
        newPerson.setFromHospitalWard(fromHospitalWard);
        
        //Add the person to the queue 
        scheduler.addPerson(newPerson);
        messageTA.append("Selected priority: " + priority);
        clearAll();
        
        //Display Person Added success message
        messageTA.append("Person added to the queue: \n" +newPerson);
        updateQueueDisplay();  // Update the normal queue display
    }//GEN-LAST:event_addBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        
        // Get name from text field
        String nameToDelete = nameTF.getText().trim();
        // Get currently displayed person
        String displayedPerson = messageTA.getText().replace("Next Person: ", "").trim();
        
        //checks if the namefield is empty
        if (!nameToDelete.isEmpty()) {
        //calls the removedPerson method in scheduler to delete the person
        boolean deleted = scheduler.removePerson(nameToDelete);

        
        //checks if the person was sucessfully deleted
        if (deleted) {
            messageTA.append(nameToDelete +  " was removed and added to Not Shown stack. \n");
        } else {
            messageTA.append("Error: Person not found in queue.");
            }
         } 
          

        nameTF.setText(""); // Clear the name field after deleting
        updateQueueDisplay();  // Update the normal queue display
        
        
        if (nameToDelete.isEmpty()) {
            messageTA.append("Error: Please enter a name to delete."); 
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void nextPersonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPersonBtnActionPerformed
        // TODO add your handling code here:
        
        
        //Get and display the next person in the queue from Scheduler
        Person next = scheduler.getNextPerson();
        if (next != null) {
            messageTA.setText("Next Person: " + next);
        } else {
            messageTA.setText("No one in the queue.");
            updateQueueDisplay();  // Update the normal queue display
        }
    }//GEN-LAST:event_nextPersonBtnActionPerformed

    private void viewQueueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewQueueBtnActionPerformed
        // TODO add your handling code here:
        
        //Display the queue
        if (scheduler !=null){ //This checks if the scheduler is initilized
            messageTA.setText(scheduler.getQueue().toString());  
        } else {
            messageTA.setText("Error: Scheduler is not initilized");
        }
    }//GEN-LAST:event_viewQueueBtnActionPerformed

    private void notShowUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notShowUpBtnActionPerformed
        // TODO add your handling code here:
        String notShownList = scheduler.viewNotShown();
        
        //Displays a message in text area
        messageTA.setText(notShownList);
        messageTA.append(notShownList);
    }//GEN-LAST:event_notShowUpBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        nameTF.setText("");
        messageTA.setText("");
        priorityTF.setText("");
        ageTF.setText("");
        gpTF.setText("");
        hospitalCB.setSelected(false);
    }//GEN-LAST:event_clearBtnActionPerformed

    
      //clears all the textfields and text area
        private void clearAll(){
        nameTF.setText("");
        messageTA.setText("");
        priorityTF.setText("");
        ageTF.setText("");
        gpTF.setText("");
        hospitalCB.setSelected(false);
    }
        
        // Updates the queue display on the GUI
        private void updateQueueDisplay() {
            queueDisplay.setText(scheduler.viewQueue());
        }
 
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BloodTestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BloodTestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BloodTestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BloodTestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BloodTestGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel ageLB;
    private javax.swing.JTextField ageTF;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel gpLB;
    private javax.swing.JTextField gpTF;
    private javax.swing.JCheckBox hospitalCB;
    private javax.swing.JLabel hospitalLB;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea messageTA;
    private javax.swing.JLabel nameLB;
    private javax.swing.JTextField nameTF;
    private javax.swing.JButton nextPersonBtn;
    private javax.swing.JButton notShowUpBtn;
    private javax.swing.JLabel priorityLB;
    private javax.swing.JTextField priorityTF;
    private javax.swing.JButton viewQueueBtn;
    // End of variables declaration//GEN-END:variables
}
